name: microtube
services:
  mysql.db:
    image: mysql:8.0
    restart: on-failure
    command: --default-authentication-plugin caching_sha2_password --lower-case-table-names=1
    #    command: [ mysqld, --default-authentication-plugin mysql_native_password, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb_monitor_enable=all, --max-connections=1001 ]

    #    user: mysql_user
    #   secrets:
    #     - db-password
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/mysql.db/:/var/lib/mysql/
#      - ./services/db/my.cnf:/etc/my.cnf
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_NAME:-MICROTUBE}
      MYSQL_USER: ${MYSQL_DB_USERNAME:-dbuser}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD:-abc123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD:-abc123}
    expose:
      - 3306
      - 33060
    networks:
      - microtube-network
    ports:
      # These ports should be enabled only for development purpose
      - 3306:3306
      - 33060:33060
    healthcheck:
      test: "mysql -h localhost --user=root --password=abc123 -e \"SHOW DATABASES\""
      interval: 20s
      timeout: 10s
      retries: 10

  mongo:
    image: mongodb/mongodb-community-server:8.0.7-ubi8
    restart: always
    volumes:
      - type: bind
        source: ./data/mongodb
        target: /data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-abc123}
    networks:
      - microtube-network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh ${MONGODB_URL:-mongodb://root:abc123@localhost:27017/} --quiet
      interval: 20s
      timeout: 10s
      retries: 10

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - microtube-network
    ports:
      - 27000:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USERNAME:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD:-abc123}
      ME_CONFIG_MONGODB_URL: ${MONGODB_URL:-mongodb://root:abc123@mongo:27017/}
      ME_CONFIG_BASICAUTH: false

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: on-failure
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./data/minio/:/data
    networks:
      - microtube-network
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}

#volumes:
#  db-data:
#    driver: local

#  secrets:
#    db-password:
#     file: db/password.txt
networks:
  microtube-network:
    name: microtube-network